# To run just the websocket services:
# docker compose  --profile websocket up
# docker compose --profile all build

# wscat -c ws://localhost:3030

services:
  redis:
    profiles: [ "m", "all" ]
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    # command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - shared-network

  dump:
    profiles: [ "m", "dump", "all" ]
    build:
      context: .
      dockerfile: Dockerfile.dump
    environment:
      - CEDRO_USERNAME=${CEDRO_USERNAME}
      - CEDRO_PASSWORD=${CEDRO_PASSWORD}
      - CEDRO_TOKEN=${CEDRO_TOKEN}
#    network_mode: host
    stdin_open: true
    tty: true
    restart: always
    volumes:
      - ./dumps:/app/dumps
    depends_on:
      - redis
    networks:
      - shared-network

  max:
    profiles: [ "m", "max", "all" ]
    build:
      context: .
      dockerfile: Dockerfile.max
#    network_mode: host
    stdin_open: true
    tty: true
    restart: always
    depends_on:
      - winfut
    networks:
      - shared-network

  winfut:
    profiles: [ "m", "winfut", "all" ]
    build:
      context: .
      dockerfile: Dockerfile.winfut
#    network_mode: host
    stdin_open: true
    tty: true
    restart: always
    depends_on:
      - dump
    networks:
      - shared-network

  metrics:
    profiles: [ "m", "metrics", "all" ]
    build:
      context: .
      dockerfile: Dockerfile.metrics
#    network_mode: host
    stdin_open: true
    tty: true
    restart: always
    depends_on:
      - winfut
    networks:
      - shared-network

  websocket-server-1:
    profiles: [ "websocket", "all" ]
    build:
      context: .
      dockerfile: Dockerfile.websocket-server
    stdin_open: true
    tty: true

  websocket-server-2:
    profiles: [ "websocket", "all" ]
    build:
      context: .
      dockerfile: Dockerfile.websocket-server
    stdin_open: true
    tty: true

  websocket-server-3:
    profiles: [ "websocket", "all" ]
    build:
      context: .
      dockerfile: Dockerfile.websocket-server
    stdin_open: true
    tty: true
  websocket-server-4:
    profiles: [ "websocket", "all" ]
    build:
      context: .
      dockerfile: Dockerfile.websocket-server
    stdin_open: true
    tty: true

  nginx:
    profiles: [ "websocket", "all" ]
    image: nginx:alpine
    ports:
      - "3030:3000"
    depends_on:
      - websocket-server-1
      - websocket-server-2
      - websocket-server-3
      - websocket-server-4
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

networks:
  shared-network:
    external: true
    name: my-shared-network